<?xml version="1.0" encoding="UTF-8"?>
<project name="mmfplanner" default="clean-run" basedir=".">
  <description>MMF Planner build script for Ant 1.7 and JUnit 4</description>

  <property name="app.name" value="mmfplanner" />
  <property name="lib.dir" value="lib" />
  <property name="res.dir" value="res" />
  <property name="src.dir" value="src" />
  <property name="build.dir" value="build" />
  <property name="dist.dir" value="dist" />
  <property name="javadoc.dir" value="javadoc" />
  <property name="test-src.dir" value="test" />
  <property name="test-build.dir" value="test-build" />
  <property name="test-reports.dir" value="test-reports" />
  <property name="test-reports-html.dir" value="test-reports-html" />
  <property name="mf.main-class" value="no.ntnu.mmfplanner.Main" />


  <path id="classpath">
    <!--pathelement location="${build.dir}" /-->
    <!--pathelement location="${test-build.dir}" /-->
    <pathelement location="${lib.dir}/jcommon-1.0.10.jar" />
    <pathelement location="${lib.dir}/jfreechart-1.0.6.jar" />
    <pathelement location="${lib.dir}/junit-4.4.jar" />
    <pathelement location="${lib.dir}/piccolo-1.2.jar" />
    <pathelement location="${lib.dir}/piccolox-1.2.jar" />
    <pathelement location="${lib.dir}/swing-layout-1.0.2.jar" />
    <pathelement location="${lib.dir}/xom-1.1.jar" />
  </path>

  <path id="classpath.test">
    <path refid="classpath" />
    <pathelement location="${build.dir}" />
    <pathelement location="${test-build.dir}" />
  </path>

  <target name="init">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${test-build.dir}" />
    <mkdir dir="${test-reports.dir}" />
    <mkdir dir="${test-reports-html.dir}" />
    <mkdir dir="${javadoc.dir}" />
  </target>

  <target name="javadoc" depends="init">
    <javadoc destdir="${javadoc.dir}" author="true" version="true" use="true" windowtitle="MMF Planner">
      <packageset dir="${src.dir}" defaultexcludes="yes">
        <include name="**" />
      </packageset>
      <classpath refid="classpath" />
    </javadoc>
  </target>

  <target name="build" depends="init">
    <javac srcdir="${src.dir}" destdir="${build.dir}" encoding="UTF-8">
      <classpath refid="classpath" />
    </javac>
    <copy todir="${build.dir}/${res.dir}" flatten="true">
      <fileset dir="${res.dir}" includes="*" />
    </copy>
  </target>

  <target name="dist" depends="build">
    <!-- Convert project class path to string property -->
    <pathconvert property="mf.classpath" pathsep=" ">
      <path refid="classpath" />
      <regexpmapper from="([^/\\]+)$" to="\1" />
    </pathconvert>

    <jar jarfile="${dist.dir}/${app.name}.jar" basedir="${build.dir}">
      <manifest>
        <attribute name="Main-Class" value="${mf.main-class}" />
        <attribute name="Class-Path" value="${mf.classpath}" />
      </manifest>
    </jar>

    <copy todir="${dist.dir}" flatten="true">
      <path refid="classpath" />
    </copy>
  </target>

  <target name="run" depends="dist">
    <java jar="${dist.dir}/${app.name}.jar" fork="true" />
  </target>

  <target name="test-build" depends="build">
    <javac srcdir="${test-src.dir}" destdir="${test-build.dir}" encoding="UTF-8">
      <classpath refid="classpath.test" />
    </javac>
  </target>

  <target name="test-run" depends="clean, test-build">
    <junit errorProperty="test.failed" failureProperty="test.failed">
      <batchtest fork="yes" todir="${test-reports.dir}">
        <fileset dir="${test-src.dir}">
          <include name="**/*Test.java" />
        </fileset>
      </batchtest>
      <formatter type="brief" usefile="false" />
      <formatter type="xml" />
      <classpath refid="classpath.test" />
    </junit>
  </target>

  <target name="test" depends="test-run" />

  <target name="test-reports" depends="test-run">
    <junitreport todir="${test-reports-html.dir}">
      <fileset dir="${test-reports.dir}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${test-reports-html.dir}" />
    </junitreport>
  </target>

  <target name="test-mail" depends="test-reports" if="test.failed">
    <mail subject="Tests failed: see http://kpro.jodal.no/doc/test-reports/ for details">
      <from address="kpro7@idi.ntnu.no" />
      <to address="kpro7@idi.ntnu.no" />
      <message mimetype="text/html" src="${test-reports-html.dir}/all-tests.html" />
    </mail>
  </target>

  <target name="clean">
    <delete dir="${build.dir}" />
    <delete dir="${dist.dir}" />
    <delete dir="${javadoc.dir}" />
    <delete dir="${test-build.dir}" />
    <delete dir="${test-reports.dir}" />
    <delete dir="${test-reports-html.dir}" />
  </target>

  <target name="clean-run" depends="clean, run" />
</project>
